--
-- PostgreSQL database dump
--

-- Dumped from database version 14.1
-- Dumped by pg_dump version 14.0

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: dkitap(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dkitap() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
	update toplamkitap set sayi=sayi-1;
return new;
end;
$$;


ALTER FUNCTION public.dkitap() OWNER TO postgres;

--
-- Name: duye(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.duye() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
	update toplamuye set sayi=sayi-1;
return new;
end;
$$;


ALTER FUNCTION public.duye() OWNER TO postgres;

--
-- Name: dyazar(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dyazar() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
	update toplamyazar set sayi=sayi-1;
return new;
end;
$$;


ALTER FUNCTION public.dyazar() OWNER TO postgres;

--
-- Name: ikitap(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.ikitap() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
	update toplamkitap set sayi=sayi+1;
return new;
end;
$$;


ALTER FUNCTION public.ikitap() OWNER TO postgres;

--
-- Name: iuye(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.iuye() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
	update toplamuye set sayi=sayi+1;
return new;
end;
$$;


ALTER FUNCTION public.iuye() OWNER TO postgres;

--
-- Name: iyazar(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.iyazar() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
	update toplamyazar set sayi=sayi+1;
return new;
end;
$$;


ALTER FUNCTION public.iyazar() OWNER TO postgres;

--
-- Name: listelekategori(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.listelekategori() RETURNS TABLE(kategorikodu integer, "kategoriadı" character varying, "kitapadı" character varying)
    LANGUAGE plpgsql
    AS $$
begin
return query
select kategori_id,kategoriad,kitapad from kategori join kategoriler on kategori.kategoriler_id = kategoriler.kategoriler_id join kitaplar on kategori.kitap_id = kitaplar.kitap_id order by kategori_id;
end;
$$;


ALTER FUNCTION public.listelekategori() OWNER TO postgres;

--
-- Name: listelekutuphane(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.listelekutuphane() RETURNS TABLE(kutuphanekodu integer, "kutuphaneadı" character varying, "kitapadı" character varying, sehir character varying)
    LANGUAGE plpgsql
    AS $$
begin
return query
select kutuphane_id,kutuphanead,kitapad,kutuphanesehir from kutuphane join kutuphaneler on kutuphane.kutuphaneler_id = kutuphaneler.kutuphaneler_id join kitaplar on kutuphane.kitap_id = kitaplar.kitap_id order by kutuphane_id;
end;
$$;


ALTER FUNCTION public.listelekutuphane() OWNER TO postgres;

--
-- Name: listeleodunc(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.listeleodunc() RETURNS TABLE(kitapkodu integer, "kitapadı" character varying, "Üyeadı" character varying, "Üyesoyadı" character varying)
    LANGUAGE plpgsql
    AS $$
begin
return query
select odunc_id,kitapad,uyead,uyesoyad from odunc join uyeler on odunc.uye_id = uyeler.uye_id join kitaplar on odunc.kitap_id = kitaplar.kitap_id order by odunc_id;
end;
$$;


ALTER FUNCTION public.listeleodunc() OWNER TO postgres;

--
-- Name: listeletur(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.listeletur() RETURNS TABLE(kitapkodu integer, "kitapadı" character varying, "kapaktürüadı" character varying)
    LANGUAGE plpgsql
    AS $$
begin
return query
select tur_id,kitapad,kapakad from tur join basimturu on tur.basim_id = basimturu.basim_id join kitaplar on tur.kitap_id = kitaplar.kitap_id order by tur_id;
end;
$$;


ALTER FUNCTION public.listeletur() OWNER TO postgres;

--
-- Name: listeleyayin(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.listeleyayin() RETURNS TABLE(yayinkodu integer, "yayıneviadı" character varying, "kitapadı" character varying)
    LANGUAGE plpgsql
    AS $$
begin
return query
select yayin_id,yayineviad,kitapad from yayin join yayinevleri on yayin.yayinevi_id = yayinevleri.yayinevi_id join kitaplar on yayin.kitap_id = kitaplar.kitap_id order by yayin_id;
end;
$$;


ALTER FUNCTION public.listeleyayin() OWNER TO postgres;

--
-- Name: listeleyazar(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.listeleyazar() RETURNS TABLE(kitapkodu integer, "yazaradı" character varying, "yazarsoyadı" character varying, "kitapadı" character varying)
    LANGUAGE plpgsql
    AS $$
begin
return query
select isbn,yazarad,yazarsoyad,kitapad from yazar join yazarlar on yazar.yazar_id = yazarlar.yazar_id join kitaplar on yazar.kitap_id = kitaplar.kitap_id order by isbn;
end;
$$;


ALTER FUNCTION public.listeleyazar() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: basimturu; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.basimturu (
    basim_id integer NOT NULL,
    kapakad character varying(40) NOT NULL
);


ALTER TABLE public.basimturu OWNER TO postgres;

--
-- Name: durum; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.durum (
    durum_id integer NOT NULL,
    durumad character varying(20) NOT NULL
);


ALTER TABLE public.durum OWNER TO postgres;

--
-- Name: kategori; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.kategori (
    kategori_id integer NOT NULL,
    kitap_id integer,
    kategoriler_id integer
);


ALTER TABLE public.kategori OWNER TO postgres;

--
-- Name: kategoriler; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.kategoriler (
    kategoriler_id integer NOT NULL,
    kategoriad character varying(20) NOT NULL
);


ALTER TABLE public.kategoriler OWNER TO postgres;

--
-- Name: kitaplar; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.kitaplar (
    kitap_id integer NOT NULL,
    barkod integer NOT NULL,
    kitapad character varying(40) NOT NULL,
    sayfasayisi integer NOT NULL,
    yayintarihi date NOT NULL,
    durum_id integer NOT NULL
);


ALTER TABLE public.kitaplar OWNER TO postgres;

--
-- Name: kutuphane; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.kutuphane (
    kutuphane_id integer NOT NULL,
    kitap_id integer,
    kutuphaneler_id integer
);


ALTER TABLE public.kutuphane OWNER TO postgres;

--
-- Name: kutuphaneler; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.kutuphaneler (
    kutuphaneler_id integer NOT NULL,
    kutuphanead character varying(40) NOT NULL,
    kutuphanesehir character varying(20)
);


ALTER TABLE public.kutuphaneler OWNER TO postgres;

--
-- Name: odunc; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.odunc (
    odunc_id integer NOT NULL,
    kitap_id integer,
    uye_id integer
);


ALTER TABLE public.odunc OWNER TO postgres;

--
-- Name: toplamkitap; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.toplamkitap (
    sayi integer
);


ALTER TABLE public.toplamkitap OWNER TO postgres;

--
-- Name: toplamuye; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.toplamuye (
    sayi integer
);


ALTER TABLE public.toplamuye OWNER TO postgres;

--
-- Name: toplamyazar; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.toplamyazar (
    sayi integer
);


ALTER TABLE public.toplamyazar OWNER TO postgres;

--
-- Name: tur; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.tur (
    tur_id integer NOT NULL,
    kitap_id integer,
    basim_id integer
);


ALTER TABLE public.tur OWNER TO postgres;

--
-- Name: uyeler; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.uyeler (
    uye_id integer NOT NULL,
    uyead character varying(20) NOT NULL,
    uyesoyad character varying(20) NOT NULL,
    uyecinsiyet text NOT NULL,
    uyemail text,
    uyetipi_id integer NOT NULL
);


ALTER TABLE public.uyeler OWNER TO postgres;

--
-- Name: uyetipi; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.uyetipi (
    uyetipi_id integer NOT NULL,
    uyetipiad character varying(20) NOT NULL
);


ALTER TABLE public.uyetipi OWNER TO postgres;

--
-- Name: viewkitaplar; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.viewkitaplar AS
 SELECT kitaplar.kitap_id,
    kitaplar.barkod,
    kitaplar.kitapad,
    kitaplar.sayfasayisi,
    kitaplar.yayintarihi,
    durum.durumad
   FROM (public.kitaplar
     JOIN public.durum ON ((kitaplar.durum_id = durum.durum_id)))
  ORDER BY kitaplar.kitap_id;


ALTER TABLE public.viewkitaplar OWNER TO postgres;

--
-- Name: viewuyeler; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.viewuyeler AS
 SELECT uyeler.uye_id,
    uyeler.uyead,
    uyeler.uyesoyad,
    uyeler.uyecinsiyet,
    uyeler.uyemail,
    uyetipi.uyetipiad
   FROM (public.uyeler
     JOIN public.uyetipi ON ((uyeler.uyetipi_id = uyetipi.uyetipi_id)))
  ORDER BY uyeler.uye_id;


ALTER TABLE public.viewuyeler OWNER TO postgres;

--
-- Name: yayin; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.yayin (
    yayin_id integer NOT NULL,
    kitap_id integer,
    yayinevi_id integer
);


ALTER TABLE public.yayin OWNER TO postgres;

--
-- Name: yayinevleri; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.yayinevleri (
    yayinevi_id integer NOT NULL,
    yayineviad character varying(20) NOT NULL,
    yayinevisehir character varying(20)
);


ALTER TABLE public.yayinevleri OWNER TO postgres;

--
-- Name: yazar; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.yazar (
    isbn integer NOT NULL,
    yazar_id integer,
    kitap_id integer
);


ALTER TABLE public.yazar OWNER TO postgres;

--
-- Name: yazarlar; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.yazarlar (
    yazar_id integer NOT NULL,
    yazarad character varying(20) NOT NULL,
    yazarsoyad character varying(20) NOT NULL,
    yazarmail text
);


ALTER TABLE public.yazarlar OWNER TO postgres;

--
-- Data for Name: basimturu; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.basimturu VALUES
	(1, 'Karton'),
	(2, 'Kağıt'),
	(3, 'Elektronik');


--
-- Data for Name: durum; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.durum VALUES
	(1, 'Yeni'),
	(2, 'Kullanılmış');


--
-- Data for Name: kategori; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.kategori VALUES
	(1, 1, 1),
	(2, 2, 2),
	(3, 2, 3),
	(4, 3, 1),
	(5, 4, 1),
	(6, 4, 2),
	(7, 5, 1),
	(8, 6, 1);


--
-- Data for Name: kategoriler; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.kategoriler VALUES
	(1, 'Bilim Kurgu'),
	(2, 'Polisiye'),
	(3, 'Macera'),
	(4, 'Dram'),
	(5, 'Komedi'),
	(6, 'Aksiyon');


--
-- Data for Name: kitaplar; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.kitaplar VALUES
	(1, 684321, 'Yüzüklerin Efendisi', 1026, '2020-02-19', 1),
	(2, 987465, 'Sherlock Holmes', 1134, '2019-04-28', 1),
	(3, 564864, 'Harry Potter', 1651, '2018-06-13', 2),
	(4, 216864, 'Percy Jackson', 1327, '2018-07-09', 2),
	(5, 346871, 'Gölge ve Kemik', 448, '2021-05-05', 1),
	(6, 456514, 'Hobbit', 310, '2020-01-23', 1),
	(7, 654321, 'Dönüşüm', 110, '2021-07-10', 1);


--
-- Data for Name: kutuphane; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.kutuphane VALUES
	(1, 1, 1),
	(2, 2, 2),
	(3, 3, 3),
	(4, 4, 1),
	(5, 5, 2),
	(6, 6, 3);


--
-- Data for Name: kutuphaneler; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.kutuphaneler VALUES
	(1, 'Milli Kütüphane', 'İzmir'),
	(2, 'Beyazıt Devlet Kütüphanesi', 'Ankara'),
	(3, 'Salt Galata Kütüphanesi', 'İstanbul');


--
-- Data for Name: odunc; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.odunc VALUES
	(1, 1, 1),
	(2, 2, 2),
	(3, 3, 3),
	(4, 4, 1),
	(5, 5, 2),
	(6, 6, 3);


--
-- Data for Name: toplamkitap; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.toplamkitap VALUES
	(7);


--
-- Data for Name: toplamuye; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.toplamuye VALUES
	(6);


--
-- Data for Name: toplamyazar; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.toplamyazar VALUES
	(5);


--
-- Data for Name: tur; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.tur VALUES
	(1, 1, 1),
	(2, 2, 2),
	(3, 3, 3),
	(4, 4, 1),
	(5, 5, 2),
	(6, 6, 3);


--
-- Data for Name: uyeler; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.uyeler VALUES
	(1, 'Ali', 'Demir', 'Erkek', 'Demir@gmail.com', 1),
	(2, 'Ayşe', 'Özlü', 'Kadın', 'Özlü@gmail.com', 2),
	(3, 'Seda', 'Sal', 'Kadın', 'Sal@gmail.com', 1),
	(4, 'Memet', 'Yavuz', 'Erkek', 'Yavuz@gmail.com', 2),
	(5, 'Mustafa', 'Çelik', 'Erkek', 'Çelik@gmail.com', 1),
	(6, 'Zeynep', 'Vefa', 'Kadın', 'Vefa@gmail.com', 2);


--
-- Data for Name: uyetipi; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.uyetipi VALUES
	(1, 'Öğrenci'),
	(2, 'Akademisyen');


--
-- Data for Name: yayin; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.yayin VALUES
	(1, 1, 1),
	(2, 2, 2),
	(3, 3, 3),
	(4, 4, 1),
	(5, 5, 2),
	(6, 6, 3);


--
-- Data for Name: yayinevleri; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.yayinevleri VALUES
	(1, 'Palme Yayınları', 'İstanbul'),
	(2, 'Martı Yayınları', 'Ankara'),
	(3, 'Yargı Yayınları', 'İzmir');


--
-- Data for Name: yazar; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.yazar VALUES
	(2, 5, 2),
	(5, 2, 5),
	(6, 1, 6),
	(1, 1, 1),
	(4, 3, 3),
	(3, 4, 4);


--
-- Data for Name: yazarlar; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO public.yazarlar VALUES
	(1, 'J.R.R.', 'Tolkien', 'Tolkien@gmail.com'),
	(2, 'Leigh', 'Bardugo', 'Bardugo@gmail.com'),
	(3, 'J.K.', 'Rowling', 'Rowling@gmail.com'),
	(4, 'Rick ', 'Riordan', 'Riordan@gmail.com'),
	(5, 'Sir Arthur Conan', 'Doyle', 'Doyle@gmail.com');


--
-- Name: basimturu basimPK; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.basimturu
    ADD CONSTRAINT "basimPK" PRIMARY KEY (basim_id);


--
-- Name: durum durumPK; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.durum
    ADD CONSTRAINT "durumPK" PRIMARY KEY (durum_id);


--
-- Name: kategori kategoriPK; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.kategori
    ADD CONSTRAINT "kategoriPK" PRIMARY KEY (kategori_id);


--
-- Name: kategoriler kategorilerPK; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.kategoriler
    ADD CONSTRAINT "kategorilerPK" PRIMARY KEY (kategoriler_id);


--
-- Name: kitaplar kitaplarPK; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.kitaplar
    ADD CONSTRAINT "kitaplarPK" PRIMARY KEY (kitap_id);


--
-- Name: kutuphane kutuphanePK; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.kutuphane
    ADD CONSTRAINT "kutuphanePK" PRIMARY KEY (kutuphane_id);


--
-- Name: kutuphaneler kutuphanelerPK; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.kutuphaneler
    ADD CONSTRAINT "kutuphanelerPK" PRIMARY KEY (kutuphaneler_id);


--
-- Name: odunc oduncPK; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.odunc
    ADD CONSTRAINT "oduncPK" PRIMARY KEY (odunc_id);


--
-- Name: tur turPK; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tur
    ADD CONSTRAINT "turPK" PRIMARY KEY (tur_id);


--
-- Name: uyeler uyelerPK; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.uyeler
    ADD CONSTRAINT "uyelerPK" PRIMARY KEY (uye_id);


--
-- Name: uyetipi uyetipiPK; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.uyetipi
    ADD CONSTRAINT "uyetipiPK" PRIMARY KEY (uyetipi_id);


--
-- Name: yayin yayinPK; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.yayin
    ADD CONSTRAINT "yayinPK" PRIMARY KEY (yayin_id);


--
-- Name: yayinevleri yayineviPK; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.yayinevleri
    ADD CONSTRAINT "yayineviPK" PRIMARY KEY (yayinevi_id);


--
-- Name: yazar yazarPK; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.yazar
    ADD CONSTRAINT "yazarPK" PRIMARY KEY (isbn);


--
-- Name: yazarlar yazarlarPK; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.yazarlar
    ADD CONSTRAINT "yazarlarPK" PRIMARY KEY (yazar_id);


--
-- Name: fki_uyelerFK; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "fki_uyelerFK" ON public.uyeler USING btree (uyetipi_id);


--
-- Name: kitaplar dkitaplar; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER dkitaplar AFTER DELETE ON public.kitaplar FOR EACH ROW EXECUTE FUNCTION public.dkitap();


--
-- Name: uyeler duyeler; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER duyeler AFTER DELETE ON public.uyeler FOR EACH ROW EXECUTE FUNCTION public.duye();


--
-- Name: yazarlar dyazarlar; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER dyazarlar AFTER DELETE ON public.yazarlar FOR EACH ROW EXECUTE FUNCTION public.dyazar();


--
-- Name: kitaplar ikitaplar; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER ikitaplar AFTER INSERT ON public.kitaplar FOR EACH ROW EXECUTE FUNCTION public.ikitap();


--
-- Name: uyeler iuyeler; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER iuyeler AFTER INSERT ON public.uyeler FOR EACH ROW EXECUTE FUNCTION public.iuye();


--
-- Name: yazarlar iyazarlar; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER iyazarlar AFTER INSERT ON public.yazarlar FOR EACH ROW EXECUTE FUNCTION public.iyazar();


--
-- Name: kategori kategoriFK1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.kategori
    ADD CONSTRAINT "kategoriFK1" FOREIGN KEY (kitap_id) REFERENCES public.kitaplar(kitap_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: kategori kategoriFK2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.kategori
    ADD CONSTRAINT "kategoriFK2" FOREIGN KEY (kategoriler_id) REFERENCES public.kategoriler(kategoriler_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: kitaplar kitaplarFK; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.kitaplar
    ADD CONSTRAINT "kitaplarFK" FOREIGN KEY (durum_id) REFERENCES public.durum(durum_id);


--
-- Name: kutuphane kutuphaneFK1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.kutuphane
    ADD CONSTRAINT "kutuphaneFK1" FOREIGN KEY (kitap_id) REFERENCES public.kitaplar(kitap_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: kutuphane kutuphaneFK2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.kutuphane
    ADD CONSTRAINT "kutuphaneFK2" FOREIGN KEY (kutuphaneler_id) REFERENCES public.kutuphaneler(kutuphaneler_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: odunc oduncFK1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.odunc
    ADD CONSTRAINT "oduncFK1" FOREIGN KEY (kitap_id) REFERENCES public.kitaplar(kitap_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: odunc oduncFK2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.odunc
    ADD CONSTRAINT "oduncFK2" FOREIGN KEY (uye_id) REFERENCES public.uyeler(uye_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: tur turFK1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tur
    ADD CONSTRAINT "turFK1" FOREIGN KEY (kitap_id) REFERENCES public.kitaplar(kitap_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: tur turFK2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tur
    ADD CONSTRAINT "turFK2" FOREIGN KEY (basim_id) REFERENCES public.basimturu(basim_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: uyeler uyelerFK; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.uyeler
    ADD CONSTRAINT "uyelerFK" FOREIGN KEY (uyetipi_id) REFERENCES public.uyetipi(uyetipi_id) NOT VALID;


--
-- Name: yayin yayinFK1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.yayin
    ADD CONSTRAINT "yayinFK1" FOREIGN KEY (kitap_id) REFERENCES public.kitaplar(kitap_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: yayin yayinFK2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.yayin
    ADD CONSTRAINT "yayinFK2" FOREIGN KEY (yayinevi_id) REFERENCES public.yayinevleri(yayinevi_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: yazar yazarFK1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.yazar
    ADD CONSTRAINT "yazarFK1" FOREIGN KEY (kitap_id) REFERENCES public.kitaplar(kitap_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: yazar yazarFK2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.yazar
    ADD CONSTRAINT "yazarFK2" FOREIGN KEY (yazar_id) REFERENCES public.yazarlar(yazar_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--


